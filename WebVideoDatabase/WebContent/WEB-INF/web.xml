<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
id="WebApp_ID" version="3.0">


	<!-- This is for Eclipse purposes I think -->
	<display-name>WebVideoDatabase</display-name>
    <servlet>
    		<!-- This dictates the first part of the URI -->
        <servlet-name>WebVideoDatabase</servlet-name>
        <servlet-class>
        		org.glassfish.jersey.servlet.ServletContainer
        	</servlet-class>
        <!-- Register resources and providers under co.spillikin.web.rest package. -->
        <!-- All of our REST handlers go here.  We only have one. -->
        <init-param>
            <param-name>
            		jersey.config.server.provider.packages
            	</param-name>
            <param-value>
                <!-- These classes do not impl anything.  They are wrapped by Jersey. -->
            		co.spillikin.web.rest
            	</param-value>
        </init-param>
        <!-- We want to map JSON to POJO and back -->   
        	<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
	     
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <!-- This maps back up to the servlet.  The URI is server:8080/WebVideoDatabase/video/ -->
        <!--      whatever annotations are found at co.spillikin.web.rest  -->
        <servlet-name>WebVideoDatabase</servlet-name>
        <url-pattern>/video/*</url-pattern>
    </servlet-mapping>
    
    
</web-app> 