# Liberty Neutron Controller Networking Option 2 install
# Does a full configuration for the Controller Node using Option 2 Networking.
#
# see Neutron Controller Install
# http://docs.openstack.org/liberty/install-guide-rdo/neutron-controller-install.html
#
# see OPTION 2 INSTALL
# http://docs.openstack.org/liberty/install-guide-rdo/neutron-controller-install-option2.html

&INSTALL_NOTE Liberty Neutron CONTROLLER Networking Option 2 install
# &CONF_FILE_NAME to set the conf file being changed.
# &ECHO to send messages.

&ECHO IT IS IMPORTANT THAT YOU FOLLOW THESE POST CONFIG INSTRUCTIONS
&ECHO NEUTRON IS ONE OF THE MORE COMPLICATED SERVICES TO CONFIGURE.

#=======================================================================
# BEGINNING OF OPTION 2 SPECIFIC CONFIG FOR CONTROLLER
# http://docs.openstack.org/liberty/install-guide-rdo/neutron-controller-install-option2.html
#=======================================================================


#############################################################
# Configure the server component

# Edit the /etc/neutron/neutron.conf file and complete the 
# following actions:
&CONF_FILE_NAME neutron.conf

# In the [database] section, configure database access:

[database]
...
connection = mysql://neutron:NEUTRON_DBPASS@controller/neutron

# Replace NEUTRON_DBPASS with the password you chose for the database.

# In the [DEFAULT] section, enable the Modular Layer 2 (ML2) plug-in, 
# router service, and overlapping IP addresses:

[DEFAULT]
...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True

# In the [DEFAULT] and [oslo_messaging_rabbit] sections, configure 
# RabbitMQ message queue access:

[DEFAULT]
...
rpc_backend = rabbit

[oslo_messaging_rabbit]
...
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = RABBIT_PASS

# Replace RABBIT_PASS with the password you chose for the openstack 
# account in RabbitMQ.

# In the [DEFAULT] and [keystone_authtoken] sections, configure Identity 
# service access:

[DEFAULT]
...
auth_strategy = keystone

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = NEUTRON_PASS

# Replace NEUTRON_PASS with the password you chose for the neutron user in 
# the Identity service.

# Note
# Comment out or remove any other options in the [keystone_authtoken] section.
&ECHO In file /etc/neutron/neutron.conf
&ECHO Make sure [keystone_authtoken] has ONLY these values...
&ECHO auth_uri = http://controller:5000
&ECHO auth_url = http://controller:35357
&ECHO auth_plugin = password
&ECHO project_domain_id = default
&ECHO user_domain_id = default
&ECHO project_name = service
&ECHO username = neutron
&ECHO password = <NEUTRON_PASS>

# In the [DEFAULT] and [nova] sections, configure 
# Networking to notify Compute of network topology changes:

[DEFAULT]
...
notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True
nova_url = http://controller:8774/v2

[nova]
...
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
region_name = RegionOne
project_name = service
username = nova
password = NOVA_PASS

# Replace NOVA_PASS with the password you chose for the nova user in the 
# Identity service.

# In the [oslo_concurrency] section, configure the lock path:

[oslo_concurrency]
...
lock_path = /var/lib/neutron/tmp

# (Optional) To assist with troubleshooting, enable verbose 
# logging in the [DEFAULT] section:

[DEFAULT]
...
verbose = True

############################################################
# Configure the Modular Layer 2 (ML2) plug-in

# The ML2 plug-in uses the Linux bridge mechanism to build layer-2 
# (bridging and switching) virtual networking infrastructure for instances.

# Edit the /etc/neutron/plugins/ml2/ml2_conf.ini file and 
# complete the following actions:
&CONF_FILE_NAME ml2_conf.ini

# In the [ml2] section, enable flat, VLAN, and VXLAN networks:

[ml2]
...
type_drivers = flat,vlan,vxlan

# In the [ml2] section, enable VXLAN project (private) networks:

[ml2]
...
tenant_network_types = vxlan

# In the [ml2] section, enable the Linux bridge and layer-2 population mechanisms:

[ml2]
...
mechanism_drivers = linuxbridge,l2population

# Warning
# After you configure the ML2 plug-in, removing values 
# in the type_drivers option can lead to database inconsistency.

# Note
# The Linux bridge agent only supports VXLAN overlay networks.
# In the [ml2] section, enable the port security extension driver:

[ml2]
...
extension_drivers = port_security

# In the [ml2_type_flat] section, configure the public flat provider network:

[ml2_type_flat]
...
flat_networks = public

# In the [ml2_type_vxlan] section, configure the VXLAN network 
# identifier range for private networks:

[ml2_type_vxlan]
...
vni_ranges = 1:1000

# In the [securitygroup] section, enable ipset to increase 
# efficiency of security group rules:

[securitygroup]
...
enable_ipset = True



#############################################################
# Configure the Linux bridge agent

# The Linux bridge agent builds layer-2 (bridging and switching) 
# virtual networking infrastructure for instances including VXLAN tunnels for private networks and handles security groups.

# Edit the /etc/neutron/plugins/ml2/linuxbridge_agent.ini file and 
# complete the following actions:
&CONF_FILE_NAME linuxbridge_agent.ini

# In the [linux_bridge] section, map the public virtual network to the public 
# physical network interface:

[linux_bridge]
physical_interface_mappings = public:PUBLIC_INTERFACE_NAME

# Replace PUBLIC_INTERFACE_NAME with the name of the underlying physical 
# public network interface.

# In the [vxlan] section, enable VXLAN overlay networks, configure the IP 
# address of the physical network interface that handles overlay networks, and enable layer-2 population:

[vxlan]
enable_vxlan = True
local_ip = OVERLAY_INTERFACE_IP_ADDRESS
l2_population = True

# Replace OVERLAY_INTERFACE_IP_ADDRESS with the IP address of the underlying 
# physical network interface that handles overlay networks. 
# The example architecture uses the management interface to tunnel traffic to 
# the other nodes. Therefore, replace OVERLAY_INTERFACE_IP_ADDRESS with each 
# node’s own management IP address.

# In the [agent] section, enable ARP spoofing protection:

[agent]
...
prevent_arp_spoofing = True

# In the [securitygroup] section, enable security groups and configure 
# the Linux bridge iptables firewall driver:

[securitygroup]
...
enable_security_group = True
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver

#############################################################
# Configure the layer-3 agent
# The Layer-3 (L3) agent provides routing and NAT services for virtual networks.

# Edit the /etc/neutron/l3_agent.ini file and complete the following actions:
&CONF_FILE_NAME l3_agent.ini

# In the [DEFAULT] section, configure the Linux bridge interface 
# driver and external network bridge:

[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
# Add spaces after th = so that this value will get set, not erased.
external_network_bridge =  
&ECHO In file /etc/neutron/l3_agent.ini
&ECHO double check that [DEFAULT] contains external_network_bridge = (nothing)

# Note
# The external_network_bridge option intentionally lacks a value 
# to enable multiple external networks on a single agent.

[DEFAULT]
...
verbose = True


#############################################################
# Configure the DHCP agent¶
# The DHCP agent provides DHCP services for virtual networks.

# Edit the /etc/neutron/dhcp_agent.ini file and complete the following actions:
&CONF_FILE_NAME dhcp_agent.ini

# In the [DEFAULT] section, configure the Linux bridge interface driver, Dnsmasq DHCP driver, and enable isolated metadata so instances on public networks can access metadata over the network:

[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = True
verbose = True

# Some cloud images ignore the DHCP MTU option in which case you 
# should configure it using metadata, a script, or other suitable method.

# In the [DEFAULT] section, enable the dnsmasq configuration file:

[DEFAULT]
...
dnsmasq_config_file = /etc/neutron/dnsmasq-neutron.conf

&ECHO IMPORTANT  CREATE THE FILE /etc/neutron/dnsmasq-neutron.conf
&ECHO enable the DHCP MTU option (26) and configure it to 1450 bytes:
&ECHO Add this line to file /etc/neutron/dnsmasq-neutron.conf
&ECHO dhcp-option-force=26,1450



#=======================================================================
# END OF OPTION 2 SPECIFIC CONFIG FOR CONTROLLER
# BEGIN OF NEUTRON CONFIG FOR CONTROLLER
# http://docs.openstack.org/liberty/install-guide-rdo/neutron-controller-install.html
#=======================================================================


#############################################################
# Configure the metadata agent

# The metadata agent provides configuration information such as credentials 
# to instances.

# Edit the /etc/neutron/metadata_agent.ini file and complete the following actions:
&CONF_FILE_NAME metadata_agent.ini

# In the [DEFAULT] section, configure access parameters:

[DEFAULT]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
auth_region = RegionOne
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = NEUTRON_PASS

# Replace NEUTRON_PASS with the password you chose for the neutron user 
# in the Identity service.

# In the [DEFAULT] section, configure the metadata host:

[DEFAULT]
...
nova_metadata_ip = controller

# In the [DEFAULT] section, configure the metadata proxy shared secret:

[DEFAULT]
...
metadata_proxy_shared_secret = METADATA_SECRET

# Replace METADATA_SECRET with a suitable secret for the metadata proxy.

verbose = True

# Handling an ambiguity here which is not covered in the install
# instructions.  I imagine setting these to what I'm sure they are
# supposed to be can't hurt if these are ignored.
# I found these in the existing file.  Not sure the intent is to 
# replace these or not.  But I thought I'd try it.   Added to variables.py
# [DEFAULT]
# admin_tenant_name = %SERVICE_TENANT_NAME%
# admin_user = %SERVICE_USER%
# admin_password = %SERVICE_PASSWORD%
[DEFAULT]

# will be replaced by varaibles.py
# admin
admin_tenant_name = SERVICE_TENANT_NAME
# admin
admin_user = SERVICE_USER
# admin's password in the Identity service
admin_password = SERVICE_PASSWORD



#############################################################
# Configure Compute to use Networking

# Edit the /etc/nova/nova.conf file and perform the following actions:
&CONF_FILE_NAME nova.conf

# In the [neutron] section, configure access parameters, enable the 
# metadata proxy, and configure the secret:

[neutron]
...
url = http://controller:9696
auth_url = http://controller:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
region_name = RegionOne
project_name = service
username = neutron
password = NEUTRON_PASS

service_metadata_proxy = True
metadata_proxy_shared_secret = METADATA_SECRET

# Replace NEUTRON_PASS with the password you chose for the neutron 
# user in the Identity service.
# Replace METADATA_SECRET with the secret you chose for the metadata proxy.


&ECHO Create the symlink
&ECHO ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini
&ECHO chgrp - seems like a good idea.
&ECHO chgrp -R neutron /etc/neutron



